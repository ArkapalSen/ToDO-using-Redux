{"version":3,"sources":["Components/ToDo.js","Actions/Index.js","App.js","Reducer/TodoReducer.js","Reducer/index.js","Store.js","index.js"],"names":["ToDo","dispatch","useDispatch","list","useSelector","state","TodoReducer","useState","inputData","setInputData","validate","setValidate","visibility","setVisibility","removeBtn","setRemoveBtn","className","type","placeholder","value","onChange","event","target","style","onClick","data","payload","id","Date","getTime","toString","map","elem","title","App","initialData","action","newList","filter","console","log","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"qOAoGeA,EAhGF,WACX,IAAMC,EAAWC,cACXC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYH,QACtD,EAAkCI,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,mBAAS,UAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAkCN,mBAAS,UAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAMA,OACE,mCACE,qBAAKC,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,iCACE,2EAGF,sBAAKA,UAAU,WAAf,UACE,uBACEC,KAAK,OACLC,YAAY,6BACZC,MAAOX,EACPY,SAAU,SAACC,GACTZ,EAAaY,EAAMC,OAAOH,OACA,IAAtBE,EAAMC,OAAOH,OACfR,GAAY,GACZE,EAAc,YAEdA,EAAc,WACdF,GAAY,OAMjBD,EACC,qDAEA,mBACEM,UAAU,qBACVO,MAAO,CAAEX,WAAYA,GACrBY,QAAS,kBACPvB,GCjDMwB,EDkDIjB,ECjDjB,CACHS,KAAO,WACPS,QAAU,CACNC,IAAK,IAAIC,MAAOC,UAAUC,WAC1BL,KAAOA,KD8CChB,EAAa,IACbM,EAAa,YCpDV,IAACU,QDkEd,qBAAKT,UAAU,YAAf,SAEGb,EAAK4B,KAAI,SAACC,GACT,OACE,sBAAKhB,UAAU,WAAf,UACE,6BAAKgB,EAAKP,OACV,mBACET,UAAU,2BACViB,MAAM,cACNT,QAAS,kBAAMvB,EChExB,CACHgB,KAAO,cACPU,GD8D+CK,EAAKL,UALbK,EAAKL,SAc1C,qBAAKX,UAAU,YAAf,SACE,wBACEA,UAAU,eACV,oBAAkB,aAClBQ,QAAS,kBAAMvB,ECtEnB,CACFgB,KAAO,eDqEqCF,EAAa,UAAYF,EAAc,YAC7EU,MAAO,CAAEX,WAAYE,GAJvB,SAME,0DE/ECoB,EARH,WACV,OACE,mCACE,cAAC,EAAD,O,eCPAC,EAAc,CAClBhC,KAAM,IAwCOG,EAtCK,WAAkC,IAAjCD,EAAgC,uDAAxB8B,EAAaC,EAAW,uCACnD,OAAQA,EAAOnB,MACb,IAAK,WACH,MAAqBmB,EAAOV,QAApBC,EAAR,EAAQA,GAAIF,EAAZ,EAAYA,KAEZ,MAAO,CAELtB,KAAK,GAAD,mBACCE,EAAMF,MADP,CAEF,CACEwB,GAAIA,EAEJF,KAAMA,MAKd,IAAK,cACH,IAAMY,EAAUhC,EAAMF,KAAKmC,QAAO,SAACN,GAAD,OAAUA,EAAKL,KAAOS,EAAOT,MAE/D,OADAY,QAAQC,WAAWH,GACZ,CAELlC,KAAMkC,GAGR,IAAK,cAEH,MAAO,CAELlC,KAAM,IAIZ,QACE,OAAOE,IC9BEoC,EAJKC,YAAgB,CAClCpC,gBCCaqC,EAFDC,YAAYH,EAAcI,OAAOC,8BAAgCD,OAAOC,gC,MCItFC,IAASC,OACP,mCACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.9f820d91.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addTodo, deleteTodo, removeTodo } from \"../Actions/Index\";\r\n\r\nconst ToDo = () => {\r\n  const dispatch = useDispatch();\r\n  const list = useSelector((state) => state.TodoReducer.list);\r\n  const [inputData, setInputData] = useState(\"\");\r\n  const [validate, setValidate] = useState(false);\r\n  const [visibility, setVisibility] = useState(\"hidden\");\r\n  const [removeBtn, setRemoveBtn] = useState(\"hidden\");\r\n\r\n  // useEffect(() => {\r\n  //     setVisibility('hidden')\r\n  // }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-div\">\r\n        <div className=\"child-div\">\r\n          <figure>\r\n            <figcaption>Add Your List Here ✌️</figcaption>\r\n          </figure>\r\n\r\n          <div className=\"addItems\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\" ✍️ Add Items.. \"\r\n              value={inputData}\r\n              onChange={(event) => {\r\n                setInputData(event.target.value);\r\n                if (event.target.value == \"\") {\r\n                  setValidate(true);\r\n                  setVisibility(\"hidden\");\r\n                } else {\r\n                  setVisibility(\"visible\");\r\n                  setValidate(false);\r\n                }\r\n                // (event.target.value) == '' ? ()=>{setValidate(true) setVisibility('hidden') : ( setVisibility('none'));\r\n              }}\r\n            />\r\n\r\n            {validate ? (\r\n              <h5>Please Enter A ToDo</h5>\r\n            ) : (\r\n              <i\r\n                className=\"fa fa-plus add-btn\"\r\n                style={{ visibility: visibility }}\r\n                onClick={() =>\r\n                  dispatch(\r\n                    addTodo(inputData),\r\n                    setInputData(\"\"),\r\n                    setRemoveBtn(\"visible\")\r\n                  )\r\n                }\r\n              ></i>\r\n            )}\r\n\r\n            {/* {validate ? setVisibility('hidden') : setVisibility('none') } */}\r\n\r\n            {/* {validate ? null : (<i\r\n              className=\"fa fa-plus add-btn\" style = {{visibility : {visibility}}}\r\n              onClick={() => dispatch(addTodo(inputData), setInputData(\"\"))}\r\n            ></i>) }   */}\r\n          </div>\r\n\r\n          <div className=\"showItems\">\r\n          \r\n            {list.map((elem) => {\r\n              return (\r\n                <div className=\"eachItem\" key={elem.id}>\r\n                  <h1>{elem.data}</h1>\r\n                  <i\r\n                    className=\"far fa-trash-alt add-btn\"\r\n                    title=\"Delete Item\"\r\n                    onClick={() => dispatch(deleteTodo(elem.id))}\r\n                  ></i>\r\n                </div>\r\n              );\r\n            })}\r\n            \r\n            \r\n          </div>\r\n\r\n          <div className=\"showItems\">\r\n            <button\r\n              className=\"btn effect04\"\r\n              data-sm-link-text=\"remove All\"\r\n              onClick={() => dispatch(removeTodo(), setRemoveBtn(\"hidden\") , setVisibility(\"hidden\"))}\r\n              style={{ visibility: removeBtn }}\r\n            >\r\n              <span>Check List</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n","export const addTodo = (data)=>{\r\n    return {\r\n        type : \"ADD_TODO\",\r\n        payload : {\r\n            id : new Date().getTime().toString(),\r\n            data : data\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteTodo = (id)=>{\r\n    return { \r\n        type : 'DELETE_TODO',\r\n        id : id\r\n    }\r\n}\r\n\r\nexport const removeTodo =()=>{\r\n    return{\r\n        type : 'REMOVE_TODO'\r\n    }\r\n}","import React from 'react'\r\nimport ToDo from './Components/ToDo'\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <ToDo/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const initialData = {\r\n  list: [],\r\n};\r\nconst TodoReducer = (state = initialData, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      const { id, data } = action.payload;\r\n    //   console.log(id);\r\n      return {\r\n        // ...state,\r\n        list: [\r\n          ...state.list,\r\n          {\r\n            id: id,\r\n\r\n            data: data,\r\n          },\r\n        ],\r\n      };\r\n\r\n    case \"DELETE_TODO\":\r\n      const newList = state.list.filter((elem) => elem.id !== action.id);\r\n      console.log(typeof(newList))\r\n      return {\r\n        // ...state.list,\r\n        list: newList\r\n      };\r\n\r\n      case \"REMOVE_TODO\":\r\n        \r\n        return {\r\n        //   ...state.list,\r\n          list: []\r\n        };\r\n  \r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default TodoReducer;\r\n","import  TodoReducer  from \"./TodoReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  TodoReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./Reducer\";\r\n\r\nconst store = createStore(rootReducer , window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./Store\";\r\nimport './Components/ToDo.css'\r\n\r\nReactDOM.render(\r\n  <>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}